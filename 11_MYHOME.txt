
※ NoticeDeleteService ※
1. 삭제할 게시글 번호 - 널처리
2. 삭제할 게시글에 댓글 유무 확인 
    List<Reply> replyList =  ReplyDao.getInstance().selectReplyList(nNo);
3. 댓글이 없으면 삭제 진행 (List인터페이스이기 때문에 size사용)  //if(replyList.size() == 0)

※ NoticeInsertService ※
 *특이사항 없음
 
※ NoticeUpdateService ※
 *특이사항 없음
 
※ NoticeViewService(상세보기) ※
 1. 상세보기할 게시글 번호 널처리
 2. Session 꺼내기 (내장 객체가 아니기 때문에)
     HttpSession session = request.getSession();
 3. 게시글을 열면 Session에 Open을 저장 할 것
    1)  Open에 조회/반환할게 없으면
    2)  Open에 true를 저장한다.
    2)  상세보기 전에 먼저 조회수 증가시키기
 4. 게시글 번호와 일치하는 "공지사항을 가져온다" 
      └ Notice notice = NoticeDao.getInstance().selectNoticeview(nNo);
    1)  게시글 번호와 일치하는 공지사항이 있는 경우  
    if(notice != null) {// 검색된 결과가 있으면
    2) 댓글 리스트를 가져옴
		  └ List<Reply> replyList = ReplyDao.getInstance().selectReplyList(nNo);  //댓글의 특징이다.
    
    
 ※ ReplyInsertService ※
 댓글삽입 성공하면 댓글리스트를 DB에서 새로 가져와야한다.
 댓글리스트를 새로 가져오는 NoticeviewService로 G
 상세보기이기 떄문에 nNo 파라미터 O / DML -> redirect
 
 ※ MemberLoginService ※
 1.ID/PW 일치하는 회원 조회
    Member loginUser = MemberDao.getInstance().selectMember(member);
    └ 있으면 (null이 아니면)
    └ 회원정보를 Session에 loginUser로 저장
    └ 로그인 기록남기기
    
  ※ MemberJoibService ※
  *특이사항 없음
  
  ※ MemberLogoutService ※
  session 꺼내고 , 모든 session을 invalidate 무효화 시킨다.
  
  ※ MemberCheckService ※
  1. 가입하려는 아이디 member table로 보내고
  2.  Member loginUser = MemberDao.getInstance().selectMember(member); 이용해서 일치하는 회원 찾기



// error

SQLIntegrityConstraintViolationException 
무결성 제약조건에 위배 ... 테이블에 단 하나만 존재해야하는 key가 중복해서 들어갈때 생기는 에러이므로 테이블에 key값이 중복되지 않게끔 해야한다.

SQLException
예외의 원인이 매우 다양함
문제 : DB마다 에러의 종류와 원인이 제각각
SQLException의 getErrorCode()를 봐야하는데 DB 에러코드가 DB별로 모두 다름
현재 사용하는 DB의 상태를 보려면 getSqlState()를 사용
getSqlState() : SOPEN SQL 스펙에 정의된 SQL 상태코드를 따름
그런데 JDBC 드라이버에서 SQLException에 담을 상태코드를 정확확게 만들어주지 않음




***대댓글*****

GROUORD를 댓글이 원글이니깐.. 게시물의 원글이 아니라 댓글의 원글보다 큰 것들은 + 1..



**************************************************************************************************
