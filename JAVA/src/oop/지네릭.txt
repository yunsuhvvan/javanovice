지네릭스란
 1. 지네릭스는 다양한 타입의 객체들을 다루는 메서드나 컬렉션 클래스에 컴파일 시의 타입체크를 해주는 기능이다. 형변환 번거로움이 줄어든다
 
 지네릭스의 장점
 1. 타입 안정성을 제공한다
 2. 타입체크화 형변환을 생략할 수 있으므로 코드가 간결해진다.
 
 
 지네릭 클래스의 선언
 1. 지네릭 타입은 "클래스"와 "메서드"에 선언할 수 있다.
 
 지네릭스의 제한 
 1. 지네릭 클래스의 Box의 객체를 생성할 떄, 객체별로 다른 타입을 지정하는 것은 적절하다. (인스턴스별로 다르게 동작려고 만든 기능이니깐)
 2. But 모든 객체에 동일하게 동작해야하는 static멤버에 타입 변수 T를 사용할 수 없다 (T는 iv로 간주, static 멤버는 iv 참조 불가능)
      class Box<t>{
          static T item; // 에러
          static int compare(T t1, T t2){...}  //에러
      } 
      
 3. new 연산자 -> 지네릭 배열 생성 불가  ( 컴파일 시점에 타입 T 가 뭔지 알아야하기때문에)
 
 지네릭 클래스의 객체 생성과 사용
 - Box<T> 의 객체에는 T타입의 객체만 저장할 수 있다 But, ArrayList를 이용해서 여러 객체 저장 가능 O
 
